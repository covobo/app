version: "3.4"

services:
  app:
    image: sun-finance-group/notificator/app:latest
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy

  consumer:
    image: sun-finance-group/notificator/app:latest
    depends_on:
      mailhog:
        condition: service_started
      gotify:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      bin/console messenger:consume async -vv
      "

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"

  rabbitmq:
    image: rabbitmq:3.9.13-management
    ports:
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  database:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_PASSWORD: password
      POSTGRES_USER: symfony
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  migration:
    image: sun-finance-group/notificator/app:latest
    depends_on:
      database:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      bin/console doctrine:database:create --if-not-exists &&
      bin/console doctrine:migrations:migrate --no-interaction &&
      exit 0;
      "

  gotify:
    image: gotify/server:2.1.4
    ports:
      - '8080:80'

volumes:
  db-data:
